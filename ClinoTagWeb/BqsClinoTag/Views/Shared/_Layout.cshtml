@using System.Security.Claims
@using BqsClinoTag.Grool

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - BQS ClinoTag</title>
    <link rel="icon" type="image/x-icon" href="/img/bqsclinotag.png" />
    <link rel="stylesheet" href="~/css/jquery-ui.css"/>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/BqsClinoTag.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">

    @RenderSection("styles", false)

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3 fond-menu">
            <div class="container">
                <a class="navbar-brand" href="https://demo.clinotag.com/"><img class="moyen-logo" src="~/img/logobqs.png" /></a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    @if (User.Identity != null && User.Identity.IsAuthenticated)
                    {
                        <ul class="navbar-nav flex-grow-1">

                            @if (User.IsInRole(nameof(Droits.Roles.SUPERADMIN)) || User.IsInRole(nameof(Droits.Roles.ADMIN))){
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        Users
                                    </a>
                                    <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                                        <a class="nav-link" asp-area="" asp-controller="Utilisateurs" asp-action="Index">User</a>
@*                                         <a class="nav-link" asp-area="" asp-controller="Clients" asp-action="Index">Customer</a>
 *@                                        <a class="nav-link" asp-area="" asp-controller="Agents" asp-action="Index">Agent</a>
                                    </div>
                                </li>
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        Work
                                    </a>
                                    <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink"> 
                                        <a class="nav-link text-dark" asp-area="" asp-controller="Locations" asp-action="Index">Locations</a>
                                        <a class="nav-link text-dark" asp-area="" asp-controller="Tasks" asp-action="Index">Tasks</a>
                                        <a class="nav-link text-dark" asp-area="" asp-controller="LocationTasks" asp-action="Index">Tasks by Location</a>
                                        <a class="nav-link text-dark" asp-area="" asp-controller="Hardware" asp-action="Index">Hardware</a>
                                    </div>
                                </li>
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        Monitoring
                                    </a>
                                    <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">                    
                                        <a class="nav-link text-dark" asp-area="" asp-controller="Passages" asp-action="Index">Cleaning</a>
                                        <a class="nav-link text-dark" asp-area="" asp-controller="Utilisations" asp-action="Index">Use of equipment</a>
                                        <a class="nav-link text-dark" asp-area="" asp-controller="Notifications" asp-action="Index">Hardware Notification</a>
                                        <a class="nav-link text-dark" asp-area="" asp-controller="Acknowledge" asp-action="Index">Acknowledge</a>
                                    </div>
                                </li>
                            }

                            @if (User.IsInRole(nameof(Droits.Roles.MANAGER)))
                            {
                                <li class="nav-item">
                                    <a class="nav-link active" asp-area="" asp-controller="Locations" asp-action="Index">Location</a>
                                </li>
                                <li class="nav-item">
                                  <a class="nav-link active" asp-area="" asp-controller="Passages" asp-action="Index">Cleaning</a>
                                </li>
                                <li class="nav-item">
                                  <a class="nav-link active" asp-area="" asp-controller="Hardwares" asp-action="Index">Hardware</a>
                                </li>
                                <li class="nav-item">
                                  <a class="nav-link active" asp-area="" asp-controller="Utilisations" asp-action="Index">Use</a>
                                </li>
                            }
                            <li class="nav-item">
                                <a class="nav-link active" asp-area="" asp-controller="Activity" asp-action="Index">Activity</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link active" asp-area="" asp-controller="Inventory" asp-action="Index">Inventory</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link active" asp-area="" asp-controller="Qty" asp-action="Index">QTY</a>
                            </li>
                        </ul>
                        <a href="/Home/Logout" >
                            <button class="btn btn-outline-danger my-2 my-sm-0">Disconnect</button>
                        </a>
                        <a class="nav-link active" asp-area="" asp-controller="Settings" asp-action="Index">
                            <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-gear" viewBox="0 0 16 16">
                                <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z" />
                                <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z" />
                            </svg>
                        </a>
                        <a href="#" id="notificationLink" class="notification-link">
                            <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-bell notification-icon" viewBox="0 0 16 16">
                                <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zM8 1.918l-.797.161A4.002 4.002 0 0 0 4 6c0 .628-.134 2.197-.459 3.742-.16.767-.376 1.566-.663 2.258h10.244c-.287-.692-.502-1.49-.663-2.258C12.134 8.197 12 6.628 12 6a4.002 4.002 0 0 0-3.203-3.92L8 1.917zM14.22 12c.223.447.481.801.78 1H1c.299-.199.557-.553.78-1C2.68 10.2 3 6.88 3 6c0-2.42 1.72-4.44 4.005-4.901a1 1 0 1 1 1.99 0A5.002 5.002 0 0 1 13 6c0 .88.32 4.2 1.22 6z" />
                            </svg>
                            <span class="badge badge-danger notification-badge"></span>
                        </a>

                        <div id="notificationContainer" style="display:none">
                        </div>
                    }
                    else
                    {
                        <ul class="navbar-nav flex-grow-1">
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page="/Index">Home</a>
                            </li>
                        </ul>
                        <a href="/Home/Login" >
                            <button class="btn btn-outline-success my-2 my-sm-0">Connect</button>
                        </a>
                    }

                    <a href="#" style="margin-left:12px !important">
                        <button class="btn btn-outline-danger my-2 my-sm-0" data-toggle="modal" data-target="#qrModal">
                            <i class="fas fa-sms"></i> Support Chat
                        </button>
                    </a>

                </div>
            </div>
        </nav>
    </header>

    <div class="modal fade" id="qrModal" tabindex="-1" role="dialog" aria-labelledby="qrModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="qrModalLabel">Scan QR Code</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Please scan the QR code below:</p>
                    <input type="text" class="form-control" placeholder="Enter Code" id="qrInput">
                    <div class="qr-code-container">
                        <!-- QR code image goes here -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Go</button>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <!-- Add some styles for better visualization (optional) -->
    <style>
        #qrInput {
            font-size: 1.2em;
            margin-top: 10px;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ced4da;
            box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
        }

        .qr-code-container {
            text-align: center;
            margin-top: 20px;
        }

        .modal-md {
            max-width: 80%; /* Adjust as needed for a smaller modal */
        }

        #chatContainer {
            background-color: #ffffff;
            border: 1px solid red;
            height: 500px; /* Adjust height as needed */
            overflow-y: auto;
        }

        .list-group {
            max-height: 500px; /* Adjust height to keep the room list scrollable if it gets too long */
            overflow-y: auto;
        }
    </style>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2022 - ClinoTag - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>
    <!-- Bootstrap CSS -->
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>


    <script>

        let locations = [];

        // Fetch locations when the page loads or the modal is opened
        fetch('https://demo.clinotag.com/api/clinotag/Table/lieu')
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json(); // Return the promise here
            })
            .then(data => {
                locations = data; // Assign the resolved data to the locations array
                console.log('Data received:', locations); // Log the locations data
                // Process the data here
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });

        console.log("locations:::", locations);

        document.querySelector('#qrModal .btn-primary').addEventListener('click', function () {

            var qrCode = document.getElementById('qrInput').value;

            if (qrCode) {
                try {
                    // Attempt to parse the QR code as a URL
                    let url = new URL(qrCode);
                    let locationParam = url.searchParams.get('location');

                    locationParam = locationParam.replace(/^"|"$/g, '');

                    // Check if the location parameter matches any of the Lieu names
                    let locationExists = locations.some(location => location.nom === locationParam);

                    if (locationExists) {
                        // Redirect to the correct URL if location is valid
                        window.location.href = qrCode;
                    } else {
                        alert('Invalid QR code. The location does not exist.');
                    }
                } catch (error) {
                    // If the QR code is not a valid URL, display an error message
                    alert('Invalid QR code format. Please ensure it is a valid URL.');
                }
            } else {
                alert('Please enter the QR code.');
            }
        });


        $('#messageButton').click(function () {
            $('#qrModal').modal('show');
        });

        // Handle QR code input submission
        $('#qrSubmit').click(function () {
            var qrCodeValue = $('#qrCodeInput').val();
            if (qrCodeValue) {
                // Redirect to the URL based on QR code
                window.location.href = qrCodeValue;
            } else {
                alert("Please scan a QR code.");
            }
        });

        $(document).ready(function () {
            // Your code here
            var connection = new signalR.HubConnectionBuilder().withUrl("/notificationHub").build();
            var notifications;
            
            connection.on("SendNotification", function (notification) {

                console.log("SendNotification", notification);
                notifications = notification;
                displayNotification(notification);

            });

            connection.on("NewNotification", function (notification) {

                console.log("New Notification", notification);

                ++notifications.notificationCount;
                notifications.notifications.push(notification);
                displayNotification(notifications);
            });

            connection.start().then(function () {
                console.log("SignalR connected.");
            }).catch(function (err) {
                console.error(err.toString());
            });

            function displayNotification(notification) {
                // Update UI to display the received notification
                var notificationElement = document.createElement("div");
                var badge = document.querySelector('.notification-badge');
                
                console.log(notification);

                if (notification.notificationCount == 0 || notification.notificationCount == undefined) {
                    badge.hide();
                    container.hide();
                } 
                else{
                    badge.innerText = notification.notificationCount;
                }
            }

            function fetchAndUpdateNotification() {
                
                connection.invoke("SendNotification")
                    .then(function (aaaa) {
                        var container = $("#notificationContainer");

                        container.toggle();
                        container.empty();

                        var badge = $(".notification-badge");

                        if (notifications.notificationCount == 0 || notifications.notificationCount == undefined) {
                            badge.hide();
                            container.hide();
                        } else {
                            badge.text(notifications.notificationCount);
                        }
                        
                        for (var i = 0; i < notifications.notifications.length; i++) {
                            var notification = notifications.notifications[i];

                            var notificationElement = $("<tr class='notification-item'></tr>");
                            var titleElement = $("<td class='notification-title' style='padding-left:15px'></td>").text(notification.lieu);
                            var dateElement = $("<td class='notification-date' style='padding-left:15px'></td>").text(notification.notificationDate);
                            var messageElement = $("<td class='notification-message' style='padding-left:15px'></td>").text(notification.notification);
                            var acknowledgeButton = $("<td><button class='btn btn-primary btn-sm acknowledge-button'  style='padding-left:15px'>Acknowledge</button></td>");

                            // Set the button ID to the lieu name
                            acknowledgeButton.find('.acknowledge-button').attr('id', notification.idAcknowledge);

                            // Add click event handler to the acknowledge button
                            acknowledgeButton.find('.acknowledge-button').on('click', function () {
                                var buttonId = $(this).attr('id');
                                console.log("Button ID: " + buttonId);

                                // Add your code to handle the button click here

                                var url = '/Acknowledge/ConfirmAcknowledge?AcknowledgeId=' + encodeURIComponent(buttonId);

                                // Make the AJAX request to call the ConfirmAcknowledge action
                                $.ajax({
                                    url: url,
                                    type: 'GET',
                                    success: function (data) {
                                        fetchAndUpdateNotification();
                                    },
                                    error: function (xhr, status, error) {
                                    }
                                });
                            });

                            notificationElement.append(titleElement, dateElement, messageElement, acknowledgeButton);
                            container.append(notificationElement);
                        }
                    })
                    .catch(function (err) {
                        console.error(err.toString());
                    });
            }

            $('#notificationLink').click(function (e) {
                e.preventDefault();

                fetchAndUpdateNotification();
            });

            // Click outside the notification container
            $(document).click(function (event) {
                var target = $(event.target);
                if (!target.closest('#notificationLink').length && !target.closest('#notificationContainer').length) {
                    $('#notificationContainer').hide();
                }
            });

            // Prevent container from closing when clicking inside it
            $('#notificationContainer').click(function (event) {
                event.stopPropagation();
            });
        });

    </script>
    @await RenderSectionAsync("Scripts", required: false)

    @await Html.PartialAsync("../Shared/_Message")

</body>
</html>
