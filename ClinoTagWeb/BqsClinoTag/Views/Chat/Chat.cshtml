@{
    string roomId = ViewBag.RoomId as string;
    string token = Context.Request.Cookies["Demo-ClinoTag-Access-Token"];
    bool isLoggedIn = !string.IsNullOrEmpty(Context.Request.Cookies["Demo-ClinoTag-Access-Token"]);
}

<div class="container mt-4">
    <!-- Hidden field or variable to pass the login status to JS -->
    <input type="hidden" id="isLoggedIn" value="@isLoggedIn" />

    <div class="row">
        @if (isLoggedIn)
        {
            <div class="col-md-4">
                <div id="roomListContainer">
                    <label for="roomList" class="form-label">Room List</label>
                    <ul class="list-group" id="roomList"></ul>
                </div>
            </div>
        }
        <div class="col-md-8">
            @if (isLoggedIn)
            {
                <div class="mb-3" style="display:none">
                    <label for="customerName" class="form-label">Customer Name</label>
                    <input type="text" class="form-control" id="customerName" value="Manager">
                </div>
            }
            else
            {
                <div class="mb-3">
                    <label for="customerName" class="form-label">Customer Name</label>
                    <input type="text" class="form-control" id="customerName" placeholder="Enter Customer Name">
                </div>
                <div class="mb-3">
                    <label for="languageSelect" class="form-label">Select Language</label>
                    <select class="form-select" id="languageSelect">
                        <option value="English">English</option>
                        <option value="Spanish">Spanish</option>
                        <option value="French">French</option>
                    </select>
                </div>
            }

            <div class="mb-3">
                <div id="chatContainer" class="chat-container border rounded p-3" style="height: 420px; overflow-y: scroll;"></div>
            </div>

            <div class="row">
                <div class="col-9">
                    <textarea class="form-control" id="chatMessage" rows="3" placeholder="Type your message..."></textarea>
                </div>
                <div class="col-3 d-flex align-items-end">
                    <button class="btn btn-primary w-100" id="sendMessageButton">Send</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    const connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
    let currentRoomId = null;
    let managerRoomId = "Managers";

    let isLogin = '@ViewBag.IsLoggin';

    function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) return parts.pop().split(';').shift();
    }

    // Usage
    const accessToken = getCookie('Demo-ClinoTag-Access-Token');
    console.log("accessToken::", accessToken); // Logs the cookie value if it exists


    connection.start().then(function () {
        console.log("Connected with ID:", connection.connectionId);

        const roomId = '@ViewBag.RoomId';

        if (roomId) {
            currentRoomId = roomId;
            connection.invoke("JoinRoom", roomId).catch(function (err) {
                console.error("Error joining room:", err.toString());
            });
        }

        connection.invoke("GetRoomList").catch(function (err) {
            console.error("Error fetching room list:", err.toString());
        });
    }).catch(function (err) {
        console.error("SignalR connection failed:", err.toString());
    });

    // Handle room list
    connection.on("ReceiveRoomList", function (rooms) {
        console.log("Received rooms:", rooms);
        $('#roomListContainer').show();
        $('#roomList').empty();
        rooms.forEach(room => {
            if (room !== "Managers") addRoomToList(room);
        });
    });

    function addRoomToList(roomId) {
        const roomList = $('#roomList');
        const newItem = $('<li>').addClass('list-group-item').text(roomId);

        if (roomId === currentRoomId) {
            newItem.addClass('active');
        }

        newItem.on('click', function () {
            currentRoomId = roomId;
            $('#roomList li').removeClass('active');
            newItem.addClass('active');
            connection.invoke("JoinRoom", roomId).catch(function (err) {
                console.error("Error joining room:", err.toString());
            });
            fetchRoomMessages(roomId);
        });

        roomList.append(newItem);
    }

    // Handle sending messages
    $('#sendMessageButton').on('click', function () {
        let message = $('#chatMessage').val();
        const language = $('#languageSelect').val();
        const roomId = currentRoomId;
        let name = $('#customerName').val();

        if (!name) {
            alert("Please enter the customer name.");
            return;
        }

        if (!message) {
            alert("Please enter the message.");
            return;
        }

        console.log("isLogin:::::", isLogin);

        if (message && roomId) {
            if (isLogin == 2) {
                // User is logged in (admin), so send an admin response
                console.log("Sent Admin Message");
                connection.invoke("SendAdminResponse", roomId, name, message).catch(function (err) {
                    console.error("Error sending admin message:", err.toString());
                });
            } else {
                // User is not logged in (customer), so send a regular message
                console.log("Sent User Message");
                connection.invoke("SendMessageToRoom", roomId, name, message, language).catch(function (err) {
                    console.error("Error sending message:", err.toString());
                });
            }

            $('#chatMessage').val('');  // Clear the input
        }
    });

    // Fetch chat history
    function fetchRoomMessages(roomId) {
        connection.invoke("GetRoomMessages", roomId).catch(function (err) {
            console.error("Error fetching room messages:", err.toString());
        });
    }

    connection.on("ReceiveMessage", function (data) {
        const roomId = data.roomId;
        const text = data.text;
        const chatContainer = $('#chatContainer');

        if (roomId === currentRoomId) {
            const newMessage = $('<div>').addClass('chat-message').text(text);
            chatContainer.append(newMessage);
        }
    });

    connection.on("ReceiveRoomMessages", function (data) {
        const roomId = data.roomId;
        const messages = data.messages;
        const chatContainer = $('#chatContainer');

        if (roomId === currentRoomId) {
            chatContainer.empty();
            messages.forEach(message => {
                const newMessage = $('<div>').addClass('chat-message').text(message);
                chatContainer.append(newMessage);
            });
        }
    });
</script>
