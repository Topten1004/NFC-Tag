// <auto-generated />
using System;
using BqsClinoTag.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BqsClinoTag.Migrations
{
    [DbContext(typeof(CLINOTAGBQSContext))]
    [Migration("20240701045814_chat_history")]
    partial class chat_history
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BqsClinoTag.Models.Acknowledge", b =>
                {
                    b.Property<int>("IdAcknowledge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ACKNOWLEDGE");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext")
                        .HasColumnName("CONTACT");

                    b.Property<string>("Lieu")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("LIEU");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("NAME");

                    b.Property<string>("Notification")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("NOTIFICATION");

                    b.Property<DateTime>("NotificationDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("NOTIFICATION_DATE");

                    b.HasKey("IdAcknowledge");

                    b.ToTable("acknowledge");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Agent", b =>
                {
                    b.Property<int>("IdAgent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_AGENT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("CODE")
                        .IsFixedLength();

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOM");

                    b.HasKey("IdAgent");

                    b.HasIndex(new[] { "Code" }, "AgentCodeUnique")
                        .IsUnique();

                    b.ToTable("AGENT");
                });

            modelBuilder.Entity("BqsClinoTag.Models.BqsClinoTag.Models.AcknowledgeLog", b =>
                {
                    b.Property<int>("IdAcknowledgeLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ACKNOWLEDGELOG");

                    b.Property<DateTime>("AcknowledgeDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ACKNOWLEDGE_DATE");

                    b.Property<int>("AcknowledgeId")
                        .HasColumnType("int")
                        .HasColumnName("ACKNOWLEDGE_ID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.HasKey("IdAcknowledgeLog");

                    b.ToTable("acknowledge_log");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOM");

                    b.HasKey("IdClient");

                    b.ToTable("CLIENT");
                });

            modelBuilder.Entity("BqsClinoTag.Models.GeolocAgent", b =>
                {
                    b.Property<int>("IdGeolocAgent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_GEOLOC_AGENT");

                    b.Property<DateTime>("DhGeoloc")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DH_GEOLOC");

                    b.Property<int>("IdAgent")
                        .HasColumnType("int")
                        .HasColumnName("ID_AGENT");

                    b.Property<string>("IdConstructeur")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ID_CONSTRUCTEUR");

                    b.Property<string>("IpGeoloc")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("IP_GEOLOC");

                    b.Property<double>("Lati")
                        .HasColumnType("double")
                        .HasColumnName("LATI");

                    b.Property<double>("Longi")
                        .HasColumnType("double")
                        .HasColumnName("LONGI");

                    b.HasKey("IdGeolocAgent");

                    b.HasIndex("IdAgent");

                    b.ToTable("GEOLOC_AGENT");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Lieu", b =>
                {
                    b.Property<int>("IdLieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_LIEU");

                    b.Property<int>("ActionType")
                        .HasColumnType("int")
                        .HasColumnName("ACTION_TYPE");

                    b.Property<string>("Ask")
                        .HasColumnType("longtext")
                        .HasColumnName("ASK");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext")
                        .HasColumnName("CONTACT");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("Count");

                    b.Property<int>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENT");

                    b.Property<bool>("Inventory")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("INVENTORY");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOM");

                    b.Property<int>("Progress")
                        .HasColumnType("int")
                        .HasColumnName("PROGRESS");

                    b.Property<string>("PublicLink")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("PUBLIC_LINK");

                    b.Property<bool>("Qty")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("QTY");

                    b.Property<DateTime>("QtyDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("QTY_DATE");

                    b.Property<int?>("Satisfaction")
                        .HasColumnType("int")
                        .HasColumnName("SATISFACTION");

                    b.Property<bool>("Stock")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("STOCK");

                    b.Property<string>("UidTag")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UID_TAG");

                    b.HasKey("IdLieu");

                    b.HasIndex("IdClient");

                    b.HasIndex(new[] { "UidTag" }, "TagUniqueLieu")
                        .IsUnique();

                    b.ToTable("LIEU");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Materiel", b =>
                {
                    b.Property<int>("IdMateriel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MATERIEL");

                    b.Property<int>("Expiration")
                        .HasColumnType("int")
                        .HasColumnName("EXPIRATION");

                    b.Property<int>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENT");

                    b.Property<string>("Instruction")
                        .HasColumnType("longtext")
                        .HasColumnName("INSTRUCTION");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("NOM");

                    b.Property<string>("UidTag")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UID_TAG");

                    b.HasKey("IdMateriel");

                    b.HasIndex("IdClient");

                    b.HasIndex(new[] { "UidTag" }, "TagUniqueObjet")
                        .IsUnique();

                    b.ToTable("MATERIEL");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Notification", b =>
                {
                    b.Property<int>("IdNotification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_NOTIFICATION");

                    b.Property<DateTime>("DhNotification")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DH_NOTIFICATION");

                    b.Property<int>("IdUtilisation")
                        .HasColumnType("int")
                        .HasColumnName("ID_UTILISATION");

                    b.Property<string>("TypeDestinataire")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("TYPE_DESTINATAIRE");

                    b.HasKey("IdNotification");

                    b.HasIndex("IdUtilisation");

                    b.ToTable("NOTIFICATION");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Passage", b =>
                {
                    b.Property<int>("IdPassage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PASSAGE");

                    b.Property<string>("Commentaire")
                        .HasColumnType("longtext")
                        .HasColumnName("COMMENTAIRE");

                    b.Property<DateTime>("DhDebut")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DH_DEBUT");

                    b.Property<DateTime>("DhFin")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DH_FIN");

                    b.Property<int>("IdAgent")
                        .HasColumnType("int")
                        .HasColumnName("ID_AGENT");

                    b.Property<int>("IdLieu")
                        .HasColumnType("int")
                        .HasColumnName("ID_LIEU");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("longblob")
                        .HasColumnName("PHOTO");

                    b.Property<int>("Satisfaction")
                        .HasColumnType("int")
                        .HasColumnName("SATISFACTION");

                    b.HasKey("IdPassage");

                    b.HasIndex("IdAgent");

                    b.HasIndex("IdLieu");

                    b.ToTable("PASSAGE");
                });

            modelBuilder.Entity("BqsClinoTag.Models.PassageTache", b =>
                {
                    b.Property<int>("IdPt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PT");

                    b.Property<bool>("Fait")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("FAIT");

                    b.Property<int>("IdPassage")
                        .HasColumnType("int")
                        .HasColumnName("ID_PASSAGE");

                    b.Property<int>("IdTl")
                        .HasColumnType("int")
                        .HasColumnName("ID_TL");

                    b.HasKey("IdPt");

                    b.HasIndex("IdPassage");

                    b.HasIndex("IdTl");

                    b.ToTable("PASSAGE_TACHE");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Role", b =>
                {
                    b.Property<string>("Role1")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ROLE");

                    b.HasKey("Role1");

                    b.ToTable("ROLE");
                });

            modelBuilder.Entity("BqsClinoTag.Models.SatisfactionLog", b =>
                {
                    b.Property<int>("IdSatisfaction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SATISFACTION");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext")
                        .HasColumnName("CONTACT");

                    b.Property<string>("LieuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LIEU_NAME");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("NAME");

                    b.Property<int>("Satisfaction")
                        .HasColumnType("int")
                        .HasColumnName("Satisfaction");

                    b.HasKey("IdSatisfaction");

                    b.ToTable("SATISFACTION_LOG");
                });

            modelBuilder.Entity("BqsClinoTag.Models.SettingsModel", b =>
                {
                    b.Property<string>("EmailAPI")
                        .HasColumnType("longtext")
                        .HasColumnName("EmailAPI");

                    b.Property<bool>("Language")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Language");

                    b.Property<string>("LanguageOne")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LanguageOne");

                    b.Property<string>("LanguageThird")
                        .HasColumnType("longtext")
                        .HasColumnName("LanguageThird");

                    b.Property<string>("LanguageTwo")
                        .HasColumnType("longtext")
                        .HasColumnName("LanguageTwo");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("longblob")
                        .HasColumnName("Logo");

                    b.Property<string>("ResetTime")
                        .HasColumnType("longtext")
                        .HasColumnName("ResetTime");

                    b.Property<bool>("Task")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Task");

                    b.ToTable("SETTINGS");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Tache", b =>
                {
                    b.Property<int>("IdTache")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TACHE");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOM");

                    b.HasKey("IdTache");

                    b.ToTable("TACHE");
                });

            modelBuilder.Entity("BqsClinoTag.Models.TacheLieu", b =>
                {
                    b.Property<int>("IdTl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TL");

                    b.Property<int>("IdLieu")
                        .HasColumnType("int")
                        .HasColumnName("ID_LIEU");

                    b.Property<int>("IdTache")
                        .HasColumnType("int")
                        .HasColumnName("ID_TACHE");

                    b.HasKey("IdTl");

                    b.HasIndex("IdTache");

                    b.HasIndex(new[] { "IdLieu", "IdTache" }, "IX_TACHE_LIEU")
                        .IsUnique();

                    b.ToTable("TACHE_LIEU");
                });

            modelBuilder.Entity("BqsClinoTag.Models.TachePlanifiee", b =>
                {
                    b.Property<int>("IdTachePlanifiee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TACHE_PLANIFIEE");

                    b.Property<string>("ActionTachePlanifiee")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ACTION_TACHE_PLANIFIEE");

                    b.Property<string>("Crontab")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CRONTAB");

                    b.Property<string>("DescriptionCrontab")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("DESCRIPTION_CRONTAB");

                    b.Property<DateTime?>("DhDerniereTache")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DH_DERNIERE_TACHE");

                    b.Property<DateTime?>("DhTachePlanifiee")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DH_TACHE_PLANIFIEE");

                    b.Property<bool>("TacheAccomplie")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TACHE_ACCOMPLIE");

                    b.Property<bool>("TachePlanifieeActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TACHE_PLANIFIEE_ACTIVE");

                    b.HasKey("IdTachePlanifiee");

                    b.ToTable("TACHE_PLANIFIEE");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Uclient", b =>
                {
                    b.Property<int>("IdUclient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_UCLIENT");

                    b.Property<int>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENT");

                    b.Property<int>("IdUtilisateur")
                        .HasColumnType("int")
                        .HasColumnName("ID_UTILISATEUR");

                    b.HasKey("IdUclient");

                    b.HasIndex("IdClient");

                    b.HasIndex(new[] { "IdUtilisateur", "IdClient" }, "NonClusteredIndex-UtilisateurClient")
                        .IsUnique();

                    b.ToTable("UCLIENT");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Utilisateur", b =>
                {
                    b.Property<int>("IdUtilisateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_UTILISATEUR");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LOGIN");

                    b.Property<string>("Mdp")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MDP");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOM");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PRENOM");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ROLE");

                    b.HasKey("IdUtilisateur");

                    b.HasIndex("Role");

                    b.ToTable("utilisateur");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Utilisation", b =>
                {
                    b.Property<int>("IdUtilisation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_UTILISATION");

                    b.Property<string>("Cloture")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CLOTURE");

                    b.Property<string>("Commentaire")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("COMMENTAIRE");

                    b.Property<DateTime>("DhDebut")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DH_DEBUT");

                    b.Property<DateTime?>("DhFin")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DH_FIN");

                    b.Property<int>("IdAgent")
                        .HasColumnType("int")
                        .HasColumnName("ID_AGENT");

                    b.Property<int>("IdMateriel")
                        .HasColumnType("int")
                        .HasColumnName("ID_MATERIEL");

                    b.HasKey("IdUtilisation");

                    b.HasIndex("IdAgent");

                    b.HasIndex("IdMateriel");

                    b.ToTable("UTILISATION");
                });

            modelBuilder.Entity("BqsClinoTag.Models.GeolocAgent", b =>
                {
                    b.HasOne("BqsClinoTag.Models.Agent", "IdAgentNavigation")
                        .WithMany("GeolocAgents")
                        .HasForeignKey("IdAgent")
                        .IsRequired()
                        .HasConstraintName("FK_GEOLOC_AGENT_UTILISATEUR");

                    b.Navigation("IdAgentNavigation");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Lieu", b =>
                {
                    b.HasOne("BqsClinoTag.Models.Client", "IdClientNavigation")
                        .WithMany("Lieus")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_LIEU_CLIENT");

                    b.Navigation("IdClientNavigation");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Materiel", b =>
                {
                    b.HasOne("BqsClinoTag.Models.Client", "IdClientNavigation")
                        .WithMany("Materiels")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_MATERIEL_CLIENT");

                    b.Navigation("IdClientNavigation");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Notification", b =>
                {
                    b.HasOne("BqsClinoTag.Models.Utilisation", "IdUtilisationNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdUtilisation")
                        .IsRequired()
                        .HasConstraintName("FK_NOTIFICATION_UTILISATION");

                    b.Navigation("IdUtilisationNavigation");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Passage", b =>
                {
                    b.HasOne("BqsClinoTag.Models.Agent", "IdAgentNavigation")
                        .WithMany("Passages")
                        .HasForeignKey("IdAgent")
                        .IsRequired()
                        .HasConstraintName("FK_PASSAGE_PASSAGE");

                    b.HasOne("BqsClinoTag.Models.Lieu", "IdLieuNavigation")
                        .WithMany("Passages")
                        .HasForeignKey("IdLieu")
                        .IsRequired()
                        .HasConstraintName("FK_PASSAGE_LIEU");

                    b.Navigation("IdAgentNavigation");

                    b.Navigation("IdLieuNavigation");
                });

            modelBuilder.Entity("BqsClinoTag.Models.PassageTache", b =>
                {
                    b.HasOne("BqsClinoTag.Models.Passage", "IdPassageNavigation")
                        .WithMany("PassageTaches")
                        .HasForeignKey("IdPassage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PASSAGE_TACHE_PASSAGE");

                    b.HasOne("BqsClinoTag.Models.TacheLieu", "IdTlNavigation")
                        .WithMany("PassageTaches")
                        .HasForeignKey("IdTl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PASSAGE_TACHE_TACHE_LIEU");

                    b.Navigation("IdPassageNavigation");

                    b.Navigation("IdTlNavigation");
                });

            modelBuilder.Entity("BqsClinoTag.Models.TacheLieu", b =>
                {
                    b.HasOne("BqsClinoTag.Models.Lieu", "IdLieuNavigation")
                        .WithMany("TacheLieus")
                        .HasForeignKey("IdLieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TACHE_LIEU_LIEU");

                    b.HasOne("BqsClinoTag.Models.Tache", "IdTacheNavigation")
                        .WithMany("TacheLieus")
                        .HasForeignKey("IdTache")
                        .IsRequired()
                        .HasConstraintName("FK_TACHE_LIEU_TACHE");

                    b.Navigation("IdLieuNavigation");

                    b.Navigation("IdTacheNavigation");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Uclient", b =>
                {
                    b.HasOne("BqsClinoTag.Models.Client", "IdClientNavigation")
                        .WithMany("Uclients")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_UCLIENT_CLIENT");

                    b.HasOne("BqsClinoTag.Models.Utilisateur", "IdUtilisateurNavigation")
                        .WithMany("Uclients")
                        .HasForeignKey("IdUtilisateur")
                        .IsRequired()
                        .HasConstraintName("FK_UCLIENT_UTILISATEUR");

                    b.Navigation("IdClientNavigation");

                    b.Navigation("IdUtilisateurNavigation");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Utilisateur", b =>
                {
                    b.HasOne("BqsClinoTag.Models.Role", "RoleNavigation")
                        .WithMany("Utilisateurs")
                        .HasForeignKey("Role")
                        .IsRequired()
                        .HasConstraintName("FK_UTILISATEUR_ROLE");

                    b.Navigation("RoleNavigation");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Utilisation", b =>
                {
                    b.HasOne("BqsClinoTag.Models.Agent", "IdAgentNavigation")
                        .WithMany("Utilisations")
                        .HasForeignKey("IdAgent")
                        .IsRequired()
                        .HasConstraintName("FK_UTILISATION_AGENT");

                    b.HasOne("BqsClinoTag.Models.Materiel", "IdMaterielNavigation")
                        .WithMany("Utilisations")
                        .HasForeignKey("IdMateriel")
                        .IsRequired()
                        .HasConstraintName("FK_UTILISATION_MATERIEL");

                    b.Navigation("IdAgentNavigation");

                    b.Navigation("IdMaterielNavigation");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Agent", b =>
                {
                    b.Navigation("GeolocAgents");

                    b.Navigation("Passages");

                    b.Navigation("Utilisations");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Client", b =>
                {
                    b.Navigation("Lieus");

                    b.Navigation("Materiels");

                    b.Navigation("Uclients");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Lieu", b =>
                {
                    b.Navigation("Passages");

                    b.Navigation("TacheLieus");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Materiel", b =>
                {
                    b.Navigation("Utilisations");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Passage", b =>
                {
                    b.Navigation("PassageTaches");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Role", b =>
                {
                    b.Navigation("Utilisateurs");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Tache", b =>
                {
                    b.Navigation("TacheLieus");
                });

            modelBuilder.Entity("BqsClinoTag.Models.TacheLieu", b =>
                {
                    b.Navigation("PassageTaches");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Utilisateur", b =>
                {
                    b.Navigation("Uclients");
                });

            modelBuilder.Entity("BqsClinoTag.Models.Utilisation", b =>
                {
                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
